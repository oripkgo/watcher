<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.watcher.business.board.mapper.BoardMapper">
	<select id="selectTagDatas" resultType="hashmap" parameterType="boardParam">
		SELECT
			GROUP_CONCAT(TAGS) AS TAGS
		FROM BOARD_TAGS
		WHERE 1=1
		AND CONTENTS_TYPE = #{contentsType}
		AND CONTENTS_ID = #{contentsId}
		AND DELETE_YN = 'N'
	</select>

	<select id="selectLikeYn" resultType="hashmap" parameterType="boardParam">
		SELECT
			(
				SELECT
					A.ID
				FROM (
					SELECT ID, LIKE_TYPE, CANCEL_YN, REG_DATE FROM BOARD_LIKE WHERE 1=1
					AND CONTENTS_TYPE = #{contentsType}
					AND CONTENTS_ID = #{contentsId}
					AND LOGIN_ID = #{loginId}
				) A
				WHERE 1=1
				  AND A.LIKE_TYPE = '01'
				  AND A.CANCEL_YN = 'N'
				ORDER BY A.REG_DATE DESC
				LIMIT 1
			) AS LIKE_ID,
			(
				IF(
					(
						SELECT
							B.ID
						FROM (
							SELECT ID, LIKE_TYPE, CANCEL_YN, REG_DATE FROM BOARD_LIKE WHERE 1=1
							AND CONTENTS_TYPE = #{contentsType}
							AND CONTENTS_ID = #{contentsId}
							AND LOGIN_ID = #{loginId}
						) B
						WHERE 1=1
						AND B.LIKE_TYPE = '01'
						AND B.CANCEL_YN IN ('N')
						LIMIT 1
					)
					,'Y','N'
				)
			)  AS LIKE_YN,
		    (
		    	<choose>
					<when test="contentsType == 'STORY'">
						SELECT LIKE_CNT FROM STORY WHERE ID = #{contentsId}
					</when>
					<when test="contentsType == 'NOTICE'">
						SELECT LIKE_CNT FROM NOTICE WHERE ID = #{contentsId}
					</when>
					<otherwise>
						SELECT 0 FROM DUAL
					</otherwise>
				</choose>
			) AS LIKE_CNT
		FROM DUAL
	</select>

	<insert id="insertLike" parameterType="boardParam" keyProperty="likeId" useGeneratedKeys="true">
		INSERT INTO BOARD_LIKE(
			 CONTENTS_TYPE
			,CONTENTS_ID
			,LOGIN_ID
			,LIKE_TYPE
			,CANCEL_YN
			,REG_ID
			,REG_DATE
		)VALUES(
			 #{contentsType}
			,#{contentsId}
			,#{loginId}
			,#{likeType}
			,'N'
			,#{regId}
			,NOW()
		)
	</insert>

	<update id="updateLike" parameterType="boardParam">
		UPDATE BOARD_LIKE SET
			 CANCEL_YN = IF(CANCEL_YN='N','Y','N')
			,UPT_ID = #{uptId}
			,UPT_DATE = NOW()
		WHERE ID=#{likeId}
	</update>

	<select id="selectCommentCnt" resultType="int" parameterType="commentParam">
		SELECT
			COUNT(A.ID)
		FROM COMMENT A
		WHERE 1=1
		  AND A.CONTENTS_TYPE = #{contentsType}
		  AND A.CONTENTS_ID = #{contentsId}
		  AND A.DELETE_YN = 'N'
	</select>


	<select id="selectComment" resultType="hashmap" parameterType="commentParam">
		SELECT A.ID
			 , A.CONTENTS_TYPE
			 , A.CONTENTS_ID
			 , A.REF_CONTENTS_ID
			 , A.COMMENT
			 , A.CONFIRM_ID
			 , A.DELETE_YN
			 , A.REG_ID
			 , DATE_FORMAT(A.REG_DATE, '%Y.%m.%d %H:%i:%s') AS REG_DATE
			 , A.UPT_ID
			 , DATE_FORMAT(A.UPT_DATE, '%Y.%m.%d %H:%i:%s') AS UPT_DATE
			 , B.NICKNAME
			 , B.MEM_PROFILE_IMG
		FROM COMMENT A
			LEFT JOIN MEMBER B ON B.LOGIN_ID = A.CONFIRM_ID
		WHERE 1 = 1
		  AND A.CONTENTS_TYPE = #{contentsType}
		  AND A.CONTENTS_ID = #{contentsId}
		  AND A.DELETE_YN = 'N'
		ORDER BY REG_DATE DESC
			LIMIT ${(pageNo-1)*listNo}, ${listNo}
	</select>


	<insert id="insertComment" parameterType="commentParam" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO COMMENT(
			 CONTENTS_TYPE
			,CONTENTS_ID
			,REF_CONTENTS_ID
			,COMMENT
			,CONFIRM_ID
			,DELETE_YN
			,REG_ID
			,REG_DATE
		)VALUES(
			 #{contentsType}
			,#{contentsId}
			,#{refContentsId}
			,#{comment}
			,#{confirmId}
			,'N'
			,#{regId}
			,NOW()
		)
	</insert>

	<update id="updateComment" parameterType="commentParam">
		UPDATE COMMENT SET
			COMMENT = #{comment},
			UPT_ID = #{uptId},
			UPT_DATE = NOW()
		WHERE ID=#{commentId}
	</update>

	<update id="deleteComment" parameterType="commentParam">
		UPDATE COMMENT SET
			DELETE_YN = 'Y',
			UPT_ID = #{uptId},
			UPT_DATE = NOW()
		WHERE ID=#{commentId}
	</update>

	<insert id="insertTag" parameterType="boardParam">
		INSERT INTO BOARD_TAGS
			(CONTENTS_TYPE, CONTENTS_ID, TAGS, REG_ID, REG_DATE, UPT_ID, UPT_DATE)
		VALUES
		    <foreach collection="tags" item="tag" separator=",">
				(#{contentsType}, #{contentsId}, TRIM(#{tag}), #{regId}, NOW(), #{uptId}, NOW())
			</foreach>
	</insert>

	<update id="updateTag" parameterType="boardParam">
		INSERT INTO BOARD_TAGS(
		      CONTENTS_TYPE
		    , CONTENTS_ID
		    , TAGS
		    , REG_ID
		    , REG_DATE
		    , UPT_ID
		    , UPT_DATE
		)
		VALUES (
			  #{contentsType}
			, #{contentsId}
			, TRIM(#{tag})
			, #{regId}
			, NOW()
			, #{uptId}
			, NOW()
		)
		ON DUPLICATE KEY UPDATE
		      DELETE_YN = 'N'
		    , REG_ID = REG_ID
		    , REG_DATE = REG_DATE
		    , UPT_ID = UPT_ID
		    , UPT_DATE = UPT_DATE
	</update>

	<update id="deleteTag" parameterType="boardParam">
		UPDATE BOARD_TAGS SET
			DELETE_YN = 'Y',
			UPT_ID=#{uptId},
			UPT_DATE=NOW()
		WHERE 1=1
		AND CONTENTS_TYPE = #{contentsType}
		AND CONTENTS_ID = #{contentsId}
		AND TAGS NOT IN
		<foreach item="item" index="index" collection="tags" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</update>

</mapper>