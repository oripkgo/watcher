<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.watcher.business.story.mapper.StoryMapper">

	<select id="getPopularStoryMain" resultType="map" parameterType="storyParam">
		SELECT
			A.ID,
			A.TITLE,
			A.SUMMARY,
		    A.ADMIN_ID,
			B.NICKNAME,
			B.ID AS MEMBER_ID,
			C.REAL_FILE_NAME,
			CONCAT(C.SAVE_PATH,'',C.SERVER_FILE_NAME) AS THUMBNAIL_IMG_PATH,
			D.CATEGORY_NM
		FROM STORY A
		LEFT JOIN MEMBER B ON B.LOGIN_ID = A.REG_ID
		LEFT JOIN FILE_RESOURCE C ON C.ID = A.THUMBNAIL_IMG_ID
		LEFT JOIN CATEGORY D ON D.ID = A.CATEGORY_ID
		INNER JOIN (
			SELECT A.REG_DATE, A.CONTENTS_TYPE, B.CATEGORY_ID,
			(
				SELECT S_A.CONTENTS_ID AS CNT FROM BOARD_LIKE S_A
				LEFT JOIN STORY S_B ON S_B.ID = S_A.CONTENTS_ID
				WHERE S_A.CONTENTS_TYPE = A.CONTENTS_TYPE AND S_A.LIKE_TYPE = A.LIKE_TYPE AND S_A.CANCEL_YN = A.CANCEL_YN
				AND S_B.CATEGORY_ID = B.CATEGORY_ID
				GROUP BY S_A.CONTENTS_ID
				ORDER BY COUNT(S_A.ID) DESC, S_A.REG_DATE DESC
				LIMIT 1
			) AS CONTENTS_ID
			, (
				SELECT COUNT(S_A.ID) AS CNT FROM BOARD_LIKE S_A
				LEFT JOIN STORY S_B ON S_B.ID = S_A.CONTENTS_ID
				WHERE S_A.CONTENTS_TYPE = A.CONTENTS_TYPE AND S_A.LIKE_TYPE = A.LIKE_TYPE AND S_A.CANCEL_YN = A.CANCEL_YN
				AND S_B.CATEGORY_ID = B.CATEGORY_ID
				GROUP BY S_A.CONTENTS_ID
				ORDER BY COUNT(S_A.ID) DESC, S_A.REG_DATE DESC
				LIMIT 1
			) AS CNT
			FROM BOARD_LIKE A
			LEFT JOIN STORY B ON B.ID = A.CONTENTS_ID
			WHERE A.CONTENTS_TYPE = 'STORY' AND A.LIKE_TYPE = '01' AND A.CANCEL_YN = 'N'
			GROUP BY B.CATEGORY_ID
		) E ON E.CONTENTS_ID = A.ID
		WHERE A.DELETE_YN = 'N' AND A.SECRET_YN = 'N'
	</select>

	<select id="selectStoryCnt" resultType="int" parameterType="storyParam">

		SELECT
			COUNT(*)
		FROM STORY A
		LEFT JOIN MEMBER B ON 1 = 1
		AND B.LOGIN_ID = A.REG_ID
		LEFT JOIN FILE_RESOURCE D ON 1=1
		AND D.ID = A.THUMBNAIL_IMG_ID
		LEFT JOIN CATEGORY E ON 1=1
		AND E.ID = A.CATEGORY_ID
		LEFT JOIN USER_DEFINE_CATEGORY G ON G.ID = A.MEMBER_CATEGORY_ID
		WHERE 1=1
		AND A.DELETE_YN = 'N'

		<include refid="conditions"/>

	</select>

	<select id="selectStory" resultType="map" parameterType="storyParam">
		/* story > selectStory */

		<include refid="storySelect"/>

		WHERE 1=1
		AND A.DELETE_YN = 'N'

		<include refid="conditions"/>

		<choose>
			<when test="!(SortByRecommendationYn==null or SortByRecommendationYn=='') and SortByRecommendationYn == 'YY'">
				ORDER BY LIKE_CNT DESC, REG_DATE DESC
				LIMIT ${limitNum}
			</when>
			<otherwise>
				ORDER BY REG_DATE DESC
				LIMIT ${(pageNo-1)*listNo},${listNo}
			</otherwise>
		</choose>
	</select>

	<select id="view" resultType="storyResp" parameterType="storyParam" >
		/*story > view*/
		<include refid="storySelect"/>
		WHERE 1=1
		AND A.DELETE_YN = 'N'
		<if test="!(id==null or id=='')">
			AND A.ID = #{id}
		</if>
	</select>

	<sql id="storySelect">
		SELECT
			A.ID,
			A.ADMIN_ID,
			A.CATEGORY_ID,
			A.MEMBER_CATEGORY_ID,
			G.CATEGORY_NM                                AS MEMBER_CATEGORY_NM,
			A.TITLE,
			A.CONTENTS,
			D.REAL_FILE_NAME,
			CONCAT(D.SAVE_PATH, '', D.SERVER_FILE_NAME)  AS THUMBNAIL_IMG_PATH,
			A.SUMMARY,
			A.SECRET_YN,
			A.LIKE_CNT,
			A.VIEW_CNT,
			A.REG_ID,
			DATE_FORMAT(A.REG_DATE, '%Y.%m.%d %H:%i:%s') AS REG_DATE,
			A.UPT_ID,
			DATE_FORMAT(A.UPT_DATE, '%Y.%m.%d %H:%i:%s') AS UPT_DATE,
			B.ID                                         AS MEMBER_ID,
			B.NICKNAME,
			E.CATEGORY_NM,
			(
				SELECT
					GROUP_CONCAT(TAGS)
				FROM BOARD_TAGS
				WHERE 1=1
				AND CONTENTS_TYPE = 'STORY'
				AND CONTENTS_ID = A.ID
				AND DELETE_YN = 'N'
			) AS TAGS,
			IFNULL((
				SELECT COUNT(1)
				FROM COMMENT
				WHERE CONTENTS_TYPE = 'STORY'
				AND CONTENTS_ID = A.ID
			), 0) AS COMMENT_CNT
		FROM STORY A
		LEFT JOIN MEMBER B ON 1 = 1
		AND B.LOGIN_ID = A.REG_ID
		LEFT JOIN FILE_RESOURCE D ON 1 = 1
		AND D.ID = A.THUMBNAIL_IMG_ID
		LEFT JOIN CATEGORY E ON 1 = 1
		AND E.ID = A.CATEGORY_ID
		LEFT JOIN USER_DEFINE_CATEGORY G ON G.ID = A.MEMBER_CATEGORY_ID
	</sql>

	<sql id="conditions">
		<if test="isOneYearData == 'YY'">
			AND (A.REG_DATE >= DATE_ADD(NOW(), INTERVAL -365 DAY) OR A.UPT_DATE >= DATE_ADD(NOW(), INTERVAL -365 DAY))
		</if>

		<choose>
			<when test="searchSecretYn == 'ALL'">
				AND A.SECRET_YN IN ('Y','N')
			</when>
			<when test="searchSecretYn == 'YY'">
				AND A.SECRET_YN IN ('Y')
			</when>
			<otherwise>
				AND A.SECRET_YN IN ('N')
			</otherwise>
		</choose>

		<if test="searchMemId != null and searchMemId != ''">
			AND A.ADMIN_ID = #{searchMemId}
		</if>

		<if test="searchAdminId != null and searchAdminId != ''">
			AND A.ADMIN_ID = #{searchAdminId}
		</if>

		<if test="searchCategoryId != null and searchCategoryId != ''">
			AND A.CATEGORY_ID = #{searchCategoryId}
		</if>

		<if test="searchMemberCategoryId != null and searchMemberCategoryId != ''">
			AND A.MEMBER_CATEGORY_ID = #{searchMemberCategoryId}
		</if>

		<if test="searchKeyword != null and searchKeyword != ''">
			AND (
				A.TITLE LIKE CONCAT('%',#{searchKeyword},'%')
				OR A.SUMMARY LIKE CONCAT('%',#{searchKeyword},'%')
				OR A.ID IN (
					SELECT
						CONTENTS_ID
					FROM BOARD_TAGS
					WHERE 1=1
						AND CONTENTS_TYPE = 'STORY'
						AND DELETE_YN = 'N'
						AND TAGS = #{searchKeyword}
				)
			)
		</if>
	</sql>

	<update id="update" parameterType="storyParam">

		UPDATE STORY SET
		<if test="categoryId != null and categoryId != ''">
			CATEGORY_ID = #{categoryId} ,
		</if>

		<if test="memberCategoryId != null and memberCategoryId != ''">
			MEMBER_CATEGORY_ID = #{memberCategoryId} ,
		</if>

		<if test="title != null and title != ''">
			TITLE = #{title} ,
		</if>

		<if test="contents != null and contents != ''">
			CONTENTS = #{contents} ,
		</if>

		<if test="thumbnailImgId != null and thumbnailImgId != ''">
			THUMBNAIL_IMG_ID = #{thumbnailImgId} ,
		</if>

		<if test="summary != null and summary != ''">
			SUMMARY = #{summary} ,
		</if>

		<if test="deleteYn != null and deleteYn != ''">
			DELETE_YN = #{deleteYn} ,
		</if>

		<if test="secretYn != null and secretYn != ''">
			SECRET_YN = #{secretYn} ,
		</if>

		UPT_ID = #{uptId},
		UPT_DATE = NOW()
		WHERE 1=1
		<choose>
			<when test="idList != null">
				AND ID IN
				<foreach collection="idList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</when>
			<otherwise>
				AND ID=#{id}
			</otherwise>
		</choose>
	</update>

	<insert id="insert" parameterType="storyParam" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO STORY(
			 CATEGORY_ID
			,MEMBER_CATEGORY_ID
			,TITLE
			,CONTENTS
			,THUMBNAIL_IMG_ID
			,SUMMARY
			,DELETE_YN
			,SECRET_YN
		    ,ADMIN_ID
			,REG_ID
			,REG_DATE
			,UPT_ID
			,UPT_DATE
		)
		VALUES (
			 #{categoryId}
			,#{memberCategoryId}
			,#{title}
			,#{contents}
			,#{thumbnailImgId}
			,#{summary}
			,'N'
			,#{secretYn}
			,IFNULL(#{adminId}, (SELECT ID FROM MEMBER WHERE LOGIN_ID = #{regId}))
			,#{regId}
			,NOW()
			,#{uptId}
			,NOW()
		)
	</insert>

	<update id="updateViewCountUp" parameterType="int">
		UPDATE STORY SET
			VIEW_CNT = (VIEW_CNT+1)
		WHERE ID=#{id}
	</update>

	<update id="updateLikeCountUp" parameterType="int">
		UPDATE STORY SET
			LIKE_CNT = (LIKE_CNT+1)
		WHERE ID=#{id}
	</update>

	<update id="updateLikeCountDown" parameterType="int">
		UPDATE STORY SET
			LIKE_CNT = (LIKE_CNT-1)
		WHERE ID=#{id}
	</update>

	<select id="selectStorysExternalCnt" parameterType="storyParam" resultType="int">
		SELECT
			COUNT(1)
		FROM STORY SR
		INNER JOIN MEMBER MB ON MB.LOGIN_ID = SR.REG_ID
		LEFT JOIN CATEGORY CG ON CG.ID = SR.CATEGORY_ID
		LEFT JOIN USER_DEFINE_CATEGORY UDC ON UDC.ID = SR.MEMBER_CATEGORY_ID
		LEFT JOIN FILE_RESOURCE FR  ON FR.ID = SR.THUMBNAIL_IMG_ID
		WHERE 1=1
			AND SR.ADMIN_ID != MB.ID
			AND MB.ID = #{searchMemId}
			AND SR.DELETE_YN = 'N'
		<if test="searchCategoryId != null and searchCategoryId != ''">
			AND SR.CATEGORY_ID = #{searchCategoryId}
		</if>

		<if test="searchKeyword != null and searchKeyword != ''">
			AND (
				SR.TITLE LIKE CONCAT('%',#{searchKeyword},'%')
				OR SR.SUMMARY LIKE CONCAT('%',#{searchKeyword},'%')
				OR SR.ID IN (
					SELECT
						CONTENTS_ID
					FROM BOARD_TAGS
					WHERE 1=1
					AND CONTENTS_TYPE = 'STORY'
					AND DELETE_YN = 'N'
					AND TAGS = #{searchKeyword}
				)
			)
		</if>
	</select>

	<select id="selectStorysExternal" parameterType="storyParam" resultType="storyResp">
		SELECT
			(
				SELECT MM.STORY_TITLE FROM MEMBER_MANAGEMENT MM
				INNER JOIN MEMBER MB ON MB.LOGIN_ID = MM.LOGIN_ID
				WHERE MB.ID = SR.ADMIN_ID
			) BLOG_NAME
		    , SR.ID
		    , SR.ADMIN_ID
		    , MB.ID AS MEMBER_ID
			, SR.CATEGORY_ID
			, CG.CATEGORY_NM
			, SR.MEMBER_CATEGORY_ID
			, UDC.CATEGORY_NM AS MEMBER_CATEGORY_NM
			, SR.TITLE
			, SR.CONTENTS
			, SR.VIEW_CNT
			, SR.LIKE_CNT
			, FR.REAL_FILE_NAME
			, CONCAT(FR.SAVE_PATH, '', FR.SERVER_FILE_NAME)  AS THUMBNAIL_IMG_PATH
			, SR.REG_DATE
			, SR.UPT_DATE
			, IFNULL((
				SELECT COUNT(1)
				FROM COMMENT
				WHERE CONTENTS_TYPE = 'STORY'
				AND CONTENTS_ID = SR.ID
			), 0) AS COMMENT_CNT
			, (
				SELECT
					GROUP_CONCAT(TAGS)
				FROM BOARD_TAGS
				WHERE 1=1
				AND CONTENTS_TYPE = 'STORY'
				AND CONTENTS_ID = SR.ID
				AND DELETE_YN = 'N'
			) AS TAGS
		FROM STORY SR
		INNER JOIN MEMBER MB ON MB.LOGIN_ID = SR.REG_ID
		LEFT JOIN CATEGORY CG ON CG.ID = SR.CATEGORY_ID
		LEFT JOIN USER_DEFINE_CATEGORY UDC ON UDC.ID = SR.MEMBER_CATEGORY_ID
		LEFT JOIN FILE_RESOURCE FR  ON FR.ID = SR.THUMBNAIL_IMG_ID
		WHERE 1=1
			AND SR.ADMIN_ID != MB.ID
			AND MB.ID = #{searchMemId}
			AND SR.DELETE_YN = 'N'
		<if test="searchCategoryId != null and searchCategoryId != ''">
			AND SR.CATEGORY_ID = #{searchCategoryId}
		</if>

		<if test="searchKeyword != null and searchKeyword != ''">
			AND (
				SR.TITLE LIKE CONCAT('%',#{searchKeyword},'%')
				OR SR.SUMMARY LIKE CONCAT('%',#{searchKeyword},'%')
				OR SR.ID IN (
					SELECT
						CONTENTS_ID
					FROM BOARD_TAGS
					WHERE 1=1
						AND CONTENTS_TYPE = 'STORY'
						AND DELETE_YN = 'N'
						AND TAGS = #{searchKeyword}
				)
			)
		</if>

		ORDER BY REG_DATE DESC
		LIMIT ${(pageNo-1)*listNo},${listNo}
	</select>

	<update id="deleteStoryExternal" parameterType="storyParam">
		UPDATE STORY
		SET
			  DELETE_YN = 'Y'
			, UPT_DATE = NOW()
			, UPT_ID = #{loginId}
		WHERE ID = #{id}
	</update>

</mapper>